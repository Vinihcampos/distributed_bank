/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import com.sun.xml.internal.ws.util.StringUtils;
import exceptions.AccountAlreadyExistsException;
import exceptions.AuthenticationException;
import exceptions.InvalidAccountException;
import exceptions.NotEnoughBalanceException;
import interfaces.IBank;
import java.awt.Color;
import java.math.BigInteger;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author vinihcampos
 */
public class BankClient extends javax.swing.JFrame {
    
    IBank bank;
    final String NUMBERS = "0123456789";
    
    /**
     * Creates new form BankClient
     * @throws java.rmi.NotBoundException
     * @throws java.net.MalformedURLException
     * @throws java.rmi.RemoteException
     */
    public BankClient() throws NotBoundException, MalformedURLException, RemoteException {
        bank = (IBank) Naming.lookup("rmi://localhost/Bank");
        initComponents();
    }
    
    public void setText(String s, Color c) {
        jTextPaneResult.setEditable(true);
        jTextPaneResult.setText("");
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        int len = jTextPaneResult.getDocument().getLength();
        jTextPaneResult.setCaretPosition(len);
        jTextPaneResult.setCharacterAttributes(aset, false);
        jTextPaneResult.replaceSelection(s);
        jTextPaneResult.setEditable(false);
    }
    
    public void append(String s, Color c) {
        jTextPaneResult.setEditable(true);
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        int len = jTextPaneResult.getDocument().getLength();
        jTextPaneResult.setCaretPosition(len);
        jTextPaneResult.setCharacterAttributes(aset, false);
        jTextPaneResult.replaceSelection(s);
        jTextPaneResult.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelAccount = new javax.swing.JPanel();
        jLabelAccount = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jLabelAnotherAccount = new javax.swing.JLabel();
        jTextFieldAccount = new javax.swing.JTextField();
        jTextFieldAnotherAccount = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jPanelOperations = new javax.swing.JPanel();
        jButtonCreateAccount = new javax.swing.JButton();
        jButtonDeposit = new javax.swing.JButton();
        jButtonWithdraw = new javax.swing.JButton();
        jButtonTransfer = new javax.swing.JButton();
        jButtonBalance = new javax.swing.JButton();
        jButtonStatement = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextFieldValue = new javax.swing.JFormattedTextField();
        jPanelResult = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneResult = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelAccount.setBorder(javax.swing.BorderFactory.createTitledBorder("Conta"));

        jLabelAccount.setText("Conta: ");

        jLabelPassword.setText("Senha: ");

        jLabelAnotherAccount.setText("Outra Conta: ");

        jTextFieldAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAccountKeyTyped(evt);
            }
        });

        jTextFieldAnotherAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAnotherAccountKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelAccountLayout = new javax.swing.GroupLayout(jPanelAccount);
        jPanelAccount.setLayout(jPanelAccountLayout);
        jPanelAccountLayout.setHorizontalGroup(
            jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAccount)
                    .addComponent(jLabelPassword)
                    .addComponent(jLabelAnotherAccount))
                .addGap(2, 2, 2)
                .addGroup(jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAccount)
                    .addComponent(jTextFieldAnotherAccount)
                    .addComponent(jPassword))
                .addContainerGap())
        );
        jPanelAccountLayout.setVerticalGroup(
            jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAccount)
                    .addComponent(jTextFieldAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAnotherAccount)
                    .addComponent(jTextFieldAnotherAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelOperations.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));

        jButtonCreateAccount.setText("Criar Conta");
        jButtonCreateAccount.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonCreateAccount.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonCreateAccount.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateAccountActionPerformed(evt);
            }
        });

        jButtonDeposit.setText("Depositar");
        jButtonDeposit.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonDeposit.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonDeposit.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDepositActionPerformed(evt);
            }
        });

        jButtonWithdraw.setText("Sacar");
        jButtonWithdraw.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonWithdraw.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonWithdraw.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWithdrawActionPerformed(evt);
            }
        });

        jButtonTransfer.setText("Transferir");
        jButtonTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransferActionPerformed(evt);
            }
        });

        jButtonBalance.setText("Consultar Saldo");
        jButtonBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBalanceActionPerformed(evt);
            }
        });

        jButtonStatement.setText("Consultar Extrato");
        jButtonStatement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatementActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor: ");

        jFormattedTextFieldValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanelOperationsLayout = new javax.swing.GroupLayout(jPanelOperations);
        jPanelOperations.setLayout(jPanelOperationsLayout);
        jPanelOperationsLayout.setHorizontalGroup(
            jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOperationsLayout.createSequentialGroup()
                        .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCreateAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(jButtonDeposit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonStatement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonTransfer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonWithdraw, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addGroup(jPanelOperationsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldValue)))
                .addContainerGap())
        );
        jPanelOperationsLayout.setVerticalGroup(
            jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTransfer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBalance)
                    .addComponent(jButtonStatement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelResult.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));

        jScrollPane2.setViewportView(jTextPaneResult);

        javax.swing.GroupLayout jPanelResultLayout = new javax.swing.GroupLayout(jPanelResult);
        jPanelResult.setLayout(jPanelResultLayout);
        jPanelResultLayout.setHorizontalGroup(
            jPanelResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelResultLayout.setVerticalGroup(
            jPanelResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelOperations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWithdrawActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && jPassword.getPassword().length > 0 && !jFormattedTextFieldValue.getText().replace(",",".").isEmpty()){
            try {                
                MessageDigest m = MessageDigest.getInstance("MD5");
                String auxPassword = String.valueOf(jPassword.getPassword());                
                m.update(auxPassword.getBytes(),0,auxPassword.length());
                
                Long account = Long.valueOf(jTextFieldAccount.getText());
                String password = new BigInteger(1,m.digest()).toString(16);
                Double value = Double.valueOf(jFormattedTextFieldValue.getText().replace(",","."));
                
                bank.withdraw(account, password, value, true);
                setText("Saque realizado com sucesso!", Color.GREEN);
            }catch (IllegalArgumentException ex) {
                setText("Saque inválido, informe um valor positivo!", Color.RED);
            }catch(InvalidAccountException ex){
                setText("Conta inexistente!", Color.RED);
            }catch(AuthenticationException ex){
                setText("Senha inválida!", Color.RED);
            }catch(NotEnoughBalanceException ex){
                setText("Saldo insuficiente!", Color.RED);
            }catch (NoSuchAlgorithmException | RemoteException ex) {
                setText("Não foi possível realizar o saque!", Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonWithdrawActionPerformed

    private void jButtonCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateAccountActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && jPassword.getPassword().length > 0){
            try {
                String account = jTextFieldAccount.getText();
                MessageDigest m = MessageDigest.getInstance("MD5");
                String auxPassword = String.valueOf(jPassword.getPassword());                
                m.update(auxPassword.getBytes(),0,auxPassword.length());
                String password = new BigInteger(1,m.digest()).toString(16);
                
                bank.createAccount(Long.valueOf(account), password);
                setText("Conta criada com sucesso!", Color.GREEN);
            }catch (AccountAlreadyExistsException ex) {
                setText("Conta existente!", Color.RED);
            }catch (NoSuchAlgorithmException | RemoteException ex) {
                setText("Não foi possível criar conta!", Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonCreateAccountActionPerformed

    private void jButtonDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDepositActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && !jFormattedTextFieldValue.getText().replace(",",".").isEmpty()){
            try {
                Long account = Long.valueOf(jTextFieldAccount.getText());
                Double value = Double.valueOf(jFormattedTextFieldValue.getText().replace(",","."));
                bank.deposit(value, account,true);
                
                setText("Depósito realizado com sucesso!", Color.GREEN);
            }catch (IllegalArgumentException ex) {
                setText("Depósito inválido, informe um valor positivo!", Color.RED);
            }catch(InvalidAccountException ex){
                setText("Conta inexistente!", Color.RED);
            }catch (RemoteException ex) {
                setText("Não foi possível realizar o saque!", Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonDepositActionPerformed

    private void jTextFieldAnotherAccountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAnotherAccountKeyTyped
        if(!NUMBERS.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldAnotherAccountKeyTyped

    private void jTextFieldAccountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAccountKeyTyped
        if(!NUMBERS.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldAccountKeyTyped

    private void jButtonBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBalanceActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && jPassword.getPassword().length > 0){
            try {
                String account = jTextFieldAccount.getText();
                MessageDigest m = MessageDigest.getInstance("MD5");
                
                String auxPassword = String.valueOf(jPassword.getPassword());                
                m.update(auxPassword.getBytes(),0,auxPassword.length());
                String password = new BigInteger(1,m.digest()).toString(16);
                
                Double balance = bank.getBalance(Long.valueOf(account), password);
                
                setText("Saldo atual: R$ " + String.valueOf(balance), Color.GREEN);
            } catch(InvalidAccountException ex){
                setText("Conta inexistente!", Color.RED);
            } catch(AuthenticationException ex){
                setText("Senha inválida!", Color.RED);
            } catch (NoSuchAlgorithmException | RemoteException ex) {
                setText("Não foi possível consultar o saldo!", Color.RED);
            }
        }
    }//GEN-LAST:event_jButtonBalanceActionPerformed

    private void jButtonTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransferActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && jPassword.getPassword().length > 0 &&
           !jTextFieldAnotherAccount.getText().isEmpty() && !jFormattedTextFieldValue.getText().replace(",",".").isEmpty()){
            
            try {
                Long account = Long.valueOf(jTextFieldAccount.getText());
                Long anotherAccount = Long.valueOf(jTextFieldAnotherAccount.getText());
                MessageDigest m = MessageDigest.getInstance("MD5");
                
                String auxPassword = String.valueOf(jPassword.getPassword());
                m.update(auxPassword.getBytes(),0,auxPassword.length());
                String password = new BigInteger(1,m.digest()).toString(16);
                
                Double value = Double.valueOf(jFormattedTextFieldValue.getText().replace(",","."));
                
                bank.transfer(account, password, value, anotherAccount);
                setText("Transferência realizada com sucesso!", Color.GREEN);
            }catch (IllegalArgumentException ex) {
                setText(ex.getMessage(), Color.RED);
            }catch(InvalidAccountException ex){
                setText("Conta inexistente!", Color.RED);
            }catch(AuthenticationException ex){
                setText("Senha inválida!", Color.RED);
            }catch(NotEnoughBalanceException ex){
                setText("Saldo insuficiente!", Color.RED);
            }catch (NoSuchAlgorithmException | RemoteException ex) {
                setText("Não foi possível realizar a transferência!", Color.RED);
            }            
        }
    }//GEN-LAST:event_jButtonTransferActionPerformed

    private void jButtonStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatementActionPerformed
        if(!jTextFieldAccount.getText().isEmpty() && jPassword.getPassword().length > 0){
            try {
                Long account = Long.valueOf(jTextFieldAccount.getText());
                MessageDigest m = MessageDigest.getInstance("MD5");
                String auxPassword = String.valueOf(jPassword.getPassword());
                m.update(auxPassword.getBytes(),0,auxPassword.length());
                String password = new BigInteger(1,m.digest()).toString(16);
                
                List<String> result = bank.statement(account, password);
                setText("Extrato: \n", Color.BLACK);
                
                for(String r : result){
                    String values[] = r.split(",");
                    append(values[0] + " ", Color.BLUE);
                    append(values[1] + " ", Color.BLACK);
                    if(values[2].charAt(0) == '-')
                        append("R$ " + values[2], Color.RED);
                    else
                        append("R$ " + values[2], Color.GREEN);
                }
                append("-----------------------------\n", Color.BLACK);
                Double value = bank.getBalance(account, password);
                append("Saldo atual: ", Color.BLUE);
                append("R$ " + String.valueOf(value), Color.GREEN);
                
            }catch(InvalidAccountException ex){
                setText("Conta inexistente!", Color.RED);
            }catch(AuthenticationException ex){
                setText("Senha inválida!", Color.RED);
            }catch (NoSuchAlgorithmException | RemoteException ex) {
                setText("Não foi possível consultar o extrato!", Color.RED);
            } 
        }
    }//GEN-LAST:event_jButtonStatementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new BankClient().setVisible(true);
                } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                    Logger.getLogger(BankClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBalance;
    private javax.swing.JButton jButtonCreateAccount;
    private javax.swing.JButton jButtonDeposit;
    private javax.swing.JButton jButtonStatement;
    private javax.swing.JButton jButtonTransfer;
    private javax.swing.JButton jButtonWithdraw;
    private javax.swing.JFormattedTextField jFormattedTextFieldValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAccount;
    private javax.swing.JLabel jLabelAnotherAccount;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JPanel jPanelAccount;
    private javax.swing.JPanel jPanelOperations;
    private javax.swing.JPanel jPanelResult;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldAccount;
    private javax.swing.JTextField jTextFieldAnotherAccount;
    private javax.swing.JTextPane jTextPaneResult;
    // End of variables declaration//GEN-END:variables
}
